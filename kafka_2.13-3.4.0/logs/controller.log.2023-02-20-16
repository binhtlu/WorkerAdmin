[2023-02-20 16:03:27,361] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-20 16:03:27,362] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-20 16:03:27,363] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-02-20 16:03:27,363] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-02-20 16:08:27,363] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-20 16:08:27,363] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-20 16:08:27,364] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-02-20 16:08:27,364] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-02-20 16:13:27,364] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-20 16:13:27,364] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-20 16:13:27,365] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-02-20 16:13:27,365] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-02-20 16:18:27,365] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-20 16:18:27,366] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-20 16:18:27,366] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-02-20 16:18:27,366] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-02-20 16:23:27,367] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-20 16:23:27,367] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-20 16:23:27,367] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-02-20 16:23:27,367] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-02-20 16:28:27,368] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-20 16:28:27,368] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-20 16:28:27,368] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-02-20 16:28:27,368] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-02-20 16:33:27,369] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-20 16:33:27,369] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-20 16:33:27,370] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-02-20 16:33:27,370] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-02-20 16:34:50,721] INFO [Controller id=0] New topics: [Set(test)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(test,Some(bU-khvyTRfCw468f57ZQgA),Map(test-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-02-20 16:34:50,721] INFO [Controller id=0] New partition creation callback for test-0 (kafka.controller.KafkaController)
[2023-02-20 16:34:50,736] INFO [RequestSendThread controllerId=0] Controller 0 connected to ubuntu.ubuntu-domain:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-20 16:38:27,370] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-20 16:38:27,370] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-20 16:38:27,371] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-02-20 16:38:27,371] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-02-20 16:43:27,371] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-20 16:43:27,371] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-20 16:43:27,372] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-02-20 16:43:27,372] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-02-20 16:46:53,904] DEBUG [Controller id=0] Delete topics listener fired for topics test to be deleted (kafka.controller.KafkaController)
[2023-02-20 16:46:53,904] INFO [Controller id=0] Starting topic deletion for topics test (kafka.controller.KafkaController)
[2023-02-20 16:46:53,907] INFO [Topic Deletion Manager 0] Handling deletion for topics test (kafka.controller.TopicDeletionManager)
[2023-02-20 16:46:53,908] INFO [Topic Deletion Manager 0] Deletion of topic test (re)started (kafka.controller.TopicDeletionManager)
[2023-02-20 16:46:53,912] INFO [RequestSendThread controllerId=0] Controller 0 connected to ubuntu.ubuntu-domain:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-20 16:46:53,983] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(test-0 -> NONE) (kafka.controller.KafkaController)
[2023-02-20 16:46:53,986] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=test,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-02-20 16:46:53,987] INFO [Topic Deletion Manager 0] Handling deletion for topics test (kafka.controller.TopicDeletionManager)
[2023-02-20 16:46:54,018] INFO [Topic Deletion Manager 0] Deletion of topic test successfully completed (kafka.controller.TopicDeletionManager)
[2023-02-20 16:46:54,020] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-02-20 16:46:54,021] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-02-20 16:47:48,485] DEBUG [Controller id=0] Delete topics listener fired for topics __consumer_offsets to be deleted (kafka.controller.KafkaController)
[2023-02-20 16:47:48,486] INFO [Controller id=0] Starting topic deletion for topics __consumer_offsets (kafka.controller.KafkaController)
[2023-02-20 16:47:48,486] INFO [Topic Deletion Manager 0] Handling deletion for topics __consumer_offsets (kafka.controller.TopicDeletionManager)
[2023-02-20 16:47:48,487] INFO [Topic Deletion Manager 0] Deletion of topic __consumer_offsets (re)started (kafka.controller.TopicDeletionManager)
[2023-02-20 16:47:48,734] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = HashMap(__consumer_offsets-22 -> NONE, __consumer_offsets-30 -> NONE, __consumer_offsets-25 -> NONE, __consumer_offsets-35 -> NONE, __consumer_offsets-37 -> NONE, __consumer_offsets-38 -> NONE, __consumer_offsets-13 -> NONE, __consumer_offsets-8 -> NONE, __consumer_offsets-21 -> NONE, __consumer_offsets-4 -> NONE, __consumer_offsets-27 -> NONE, __consumer_offsets-7 -> NONE, __consumer_offsets-9 -> NONE, __consumer_offsets-46 -> NONE, __consumer_offsets-41 -> NONE, __consumer_offsets-33 -> NONE, __consumer_offsets-23 -> NONE, __consumer_offsets-49 -> NONE, __consumer_offsets-47 -> NONE, __consumer_offsets-16 -> NONE, __consumer_offsets-28 -> NONE, __consumer_offsets-31 -> NONE, __consumer_offsets-36 -> NONE, __consumer_offsets-42 -> NONE, __consumer_offsets-3 -> NONE, __consumer_offsets-18 -> NONE, __consumer_offsets-15 -> NONE, __consumer_offsets-24 -> NONE, __consumer_offsets-17 -> NONE, __consumer_offsets-48 -> NONE, __consumer_offsets-19 -> NONE, __consumer_offsets-11 -> NONE, __consumer_offsets-2 -> NONE, __consumer_offsets-43 -> NONE, __consumer_offsets-6 -> NONE, __consumer_offsets-14 -> NONE, __consumer_offsets-20 -> NONE, __consumer_offsets-0 -> NONE, __consumer_offsets-44 -> NONE, __consumer_offsets-39 -> NONE, __consumer_offsets-12 -> NONE, __consumer_offsets-45 -> NONE, __consumer_offsets-1 -> NONE, __consumer_offsets-5 -> NONE, __consumer_offsets-26 -> NONE, __consumer_offsets-29 -> NONE, __consumer_offsets-34 -> NONE, __consumer_offsets-10 -> NONE, __consumer_offsets-32 -> NONE, __consumer_offsets-40 -> NONE) (kafka.controller.KafkaController)
[2023-02-20 16:47:48,735] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=__consumer_offsets,Partition=46,Replica=0],[Topic=__consumer_offsets,Partition=47,Replica=0],[Topic=__consumer_offsets,Partition=21,Replica=0],[Topic=__consumer_offsets,Partition=13,Replica=0],[Topic=__consumer_offsets,Partition=12,Replica=0],[Topic=__consumer_offsets,Partition=1,Replica=0],[Topic=__consumer_offsets,Partition=5,Replica=0],[Topic=__consumer_offsets,Partition=28,Replica=0],[Topic=__consumer_offsets,Partition=11,Replica=0],[Topic=__consumer_offsets,Partition=7,Replica=0],[Topic=__consumer_offsets,Partition=6,Replica=0],[Topic=__consumer_offsets,Partition=24,Replica=0],[Topic=__consumer_offsets,Partition=27,Replica=0],[Topic=__consumer_offsets,Partition=41,Replica=0],[Topic=__consumer_offsets,Partition=42,Replica=0],[Topic=__consumer_offsets,Partition=4,Replica=0],[Topic=__consumer_offsets,Partition=23,Replica=0],[Topic=__consumer_offsets,Partition=36,Replica=0],[Topic=__consumer_offsets,Partition=20,Replica=0],[Topic=__consumer_offsets,Partition=17,Replica=0],[Topic=__consumer_offsets,Partition=2,Replica=0],[Topic=__consumer_offsets,Partition=25,Replica=0],[Topic=__consumer_offsets,Partition=15,Replica=0],[Topic=__consumer_offsets,Partition=40,Replica=0],[Topic=__consumer_offsets,Partition=32,Replica=0],[Topic=__consumer_offsets,Partition=38,Replica=0],[Topic=__consumer_offsets,Partition=8,Replica=0],[Topic=__consumer_offsets,Partition=48,Replica=0],[Topic=__consumer_offsets,Partition=3,Replica=0],[Topic=__consumer_offsets,Partition=18,Replica=0],[Topic=__consumer_offsets,Partition=35,Replica=0],[Topic=__consumer_offsets,Partition=49,Replica=0],[Topic=__consumer_offsets,Partition=22,Replica=0],[Topic=__consumer_offsets,Partition=9,Replica=0],[Topic=__consumer_offsets,Partition=34,Replica=0],[Topic=__consumer_offsets,Partition=39,Replica=0],[Topic=__consumer_offsets,Partition=14,Replica=0],[Topic=__consumer_offsets,Partition=44,Replica=0],[Topic=__consumer_offsets,Partition=31,Replica=0],[Topic=__consumer_offsets,Partition=33,Replica=0],[Topic=__consumer_offsets,Partition=45,Replica=0],[Topic=__consumer_offsets,Partition=37,Replica=0],[Topic=__consumer_offsets,Partition=30,Replica=0],[Topic=__consumer_offsets,Partition=0,Replica=0],[Topic=__consumer_offsets,Partition=19,Replica=0],[Topic=__consumer_offsets,Partition=26,Replica=0],[Topic=__consumer_offsets,Partition=10,Replica=0],[Topic=__consumer_offsets,Partition=43,Replica=0],[Topic=__consumer_offsets,Partition=16,Replica=0],[Topic=__consumer_offsets,Partition=29,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-02-20 16:47:48,736] INFO [Topic Deletion Manager 0] Handling deletion for topics __consumer_offsets (kafka.controller.TopicDeletionManager)
[2023-02-20 16:47:49,112] INFO [Topic Deletion Manager 0] Deletion of topic __consumer_offsets successfully completed (kafka.controller.TopicDeletionManager)
[2023-02-20 16:47:49,114] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-02-20 16:47:49,115] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-02-20 16:48:27,373] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-20 16:48:27,373] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-20 16:48:27,373] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-02-20 16:48:27,373] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-02-20 16:48:29,092] DEBUG [Controller id=0] Delete topics listener fired for topics important to be deleted (kafka.controller.KafkaController)
[2023-02-20 16:48:29,092] INFO [Controller id=0] Starting topic deletion for topics important (kafka.controller.KafkaController)
[2023-02-20 16:48:29,092] INFO [Topic Deletion Manager 0] Handling deletion for topics important (kafka.controller.TopicDeletionManager)
[2023-02-20 16:48:29,092] INFO [Topic Deletion Manager 0] Deletion of topic important (re)started (kafka.controller.TopicDeletionManager)
[2023-02-20 16:48:29,125] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(important-0 -> NONE) (kafka.controller.KafkaController)
[2023-02-20 16:48:29,125] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=important,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-02-20 16:48:29,126] INFO [Topic Deletion Manager 0] Handling deletion for topics important (kafka.controller.TopicDeletionManager)
[2023-02-20 16:48:29,142] INFO [Topic Deletion Manager 0] Deletion of topic important successfully completed (kafka.controller.TopicDeletionManager)
[2023-02-20 16:48:29,143] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-02-20 16:48:29,143] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-02-20 16:48:53,541] DEBUG [Controller id=0] Delete topics listener fired for topics quickstart-events to be deleted (kafka.controller.KafkaController)
[2023-02-20 16:48:53,541] INFO [Controller id=0] Starting topic deletion for topics quickstart-events (kafka.controller.KafkaController)
[2023-02-20 16:48:53,541] INFO [Topic Deletion Manager 0] Handling deletion for topics quickstart-events (kafka.controller.TopicDeletionManager)
[2023-02-20 16:48:53,541] INFO [Topic Deletion Manager 0] Deletion of topic quickstart-events (re)started (kafka.controller.TopicDeletionManager)
[2023-02-20 16:48:53,576] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(quickstart-events-0 -> NONE) (kafka.controller.KafkaController)
[2023-02-20 16:48:53,576] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=quickstart-events,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-02-20 16:48:53,577] INFO [Topic Deletion Manager 0] Handling deletion for topics quickstart-events (kafka.controller.TopicDeletionManager)
[2023-02-20 16:48:53,593] INFO [Topic Deletion Manager 0] Deletion of topic quickstart-events successfully completed (kafka.controller.TopicDeletionManager)
[2023-02-20 16:48:53,594] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-02-20 16:48:53,595] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-02-20 16:52:08,420] INFO [Controller id=0] New topics: [Set(quickstart-events)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(quickstart-events,Some(EZTVxuIHS5iV9yS3jFNHgA),Map(quickstart-events-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-02-20 16:52:08,420] INFO [Controller id=0] New partition creation callback for quickstart-events-0 (kafka.controller.KafkaController)
[2023-02-20 16:52:08,438] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(o65rcSL0RiqN773RcXxgMA),HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-02-20 16:52:08,438] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2023-02-20 16:53:27,374] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-20 16:53:27,374] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-20 16:53:27,375] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-02-20 16:53:27,375] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-02-20 16:58:27,375] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-20 16:58:27,375] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-20 16:58:27,376] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-02-20 16:58:27,376] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
